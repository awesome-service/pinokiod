<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link href="/xterm.min.css" rel="stylesheet" />
<link href="/css/fontawesome.min.css" rel="stylesheet">
<link href="/css/solid.min.css" rel="stylesheet">
<link href="/css/regular.min.css" rel="stylesheet">
<link href="/css/brands.min.css" rel="stylesheet">
<link href="/markdown.css" rel="stylesheet"/>
<link href="/noty.css" rel="stylesheet"/>
<link href="/style.css" rel="stylesheet"/>
<% if (agent === "electron") { %>
  <link href="/electron.css" rel="stylesheet"/>
<% } %>
<style>
.line2 {
  display: flex;
  align-items: center;
  cursor: pointer;
  background: rgba(0,0,100,0.04);
}
.line2 a {
  text-decoration: none;
  color: black;
}
.status {
  padding: 10px;
  margin: 10px;
  border-radius: 10px;
}
.status.offline {
  background: silver;
}
.status.online {
  background: yellowgreen;
}
.switch {
  padding: 10px;
  margin: 10px 0;
}
.switch[data-online=true] {
  color: yellowgreen;
}
.button {
  padding: 10px;
}
.on, .off {
  display: flex;
  align-items: center;
}
.btn {
  margin-right: 5px;
  font-weight: normal;
}
.items {
  max-width: 600px;
  margin: 50px auto;
}
.item {
  margin: 0;
  /*
  border-top: 1px solid rgba(255,255,255,0.1);
  border-bottom: 1px solid rgba(255,255,255,0.1);
  */
  padding: 15px 0;
}
.item button {
  padding: 10px 20px;
}
.item label {
  display: block;
  font-weight: bold;
  text-transform: capitalize;
  font-size: 14px;
  padding-bottom: 5px;
}
body.dark .item input[type=text] {
  background: rgba(255,255,255,0.1);
  color: white;
}
body.dark .item select {
  color: white;
  background: rgba(255,255,255,0.1);
}
.item input[type=text] {
  padding: 10px;
  flex-grow: 1;
  border: none;
  /*
  background: rgba(0,0,0,0.05);
  */
  width: 100%;
}
.item select {
  background: rgba(0,0,0,0.05);
  padding: 10px;
  box-sizing: border-box;
  width: 100%;
  border: none;
}
.item img {
  width: 100px;
}
.item .title {
  text-decoration: none;
  color: royalblue;
}
.item .col {
  padding: 10px;
}
.item .col > * {
  margin: 5px 0;
}
.item .stat {
  color: rgba(0,0,0,0.8);
  display: flex;
}
.item .stat > * {
  margin-right: 15px;
}
.timestamp {
  color: rgba(0,0,0,0.5);
}
.loading {
  padding: 10px 20px;
  text-align: center;
}
body.light {
/*
  background: var(--light-nav-bg);
  */
}
/*
form {
  text-align: center;
}
body.dark header .btn2 {
  color: var(--light-link-color); 
}
header .btn2 {
  color: var(--light-color); 
}
*/
/*
body.dark header .home {
  color: var(--light-link-color); 
}
*/
header .home {
  color: var(--light-color); 
  padding: 10px;
}
</style>
<script src="/hotkeys.min.js"></script>
<script src="/sweetalert2.js"></script>
<script src="/noty.js"></script>
<script src="/notyq.js"></script>
<script src="/xterm.js"></script>
<script src="/xterm-addon-fit.js"></script>
<script src="/xterm-addon-web-links.js"></script>
<script src="/xterm-theme.js"></script>
<script src="/sweetalert2.js"></script>
<script src="/install.js"></script>
<script src="/timeago.min.js"></script>
<script src="/common.js"></script>
<script src="/opener.js"></script>
<script src="/nav.js"></script>
<script src="/report.js"></script>
</head>
<body class='<%=theme%>'>
<!--
<nav>
  <a class='logo' href="/">dal</a>
</nav>
  -->
<header class='grabbable'>
<h1>
<a class='home' href="/"><i class="fa-solid fa-house"></i></a>
<% paths.forEach((path) => { %>
  <% if (path.action) { %>
    <a class='path nav-button' id="<%=path.id%>" onclick="<%=path.action%>"><%-path.name%></a>
  <% } else if (path.path) { %>
    <a class='path' href="<%=path.path%>"><%-path.name%></a>
  <% } %>
<% }) %>
<div class='flexible'></div>
<div class='nav-btns'>
  <button class='btn2' id='report'><div><i class="fa-solid fa-bug"></i></div><div>Report Bug</div></button>
  <a class='btn2' href='https://discord.gg/TQdNwadtE4' target="_blank"><div><i class="fa-brands fa-discord"></i></div><div>Discord</div></a>
  <a class='btn2' href='https://twitter.com/cocktailpeanut' target="_blank"><div><i class="fa-brands fa-twitter"></i></div><div>Twitter</div></a>
  <button id='new-window' title='open a new window'><i class="fa-solid fa-plus"></i></button>
</div>
</h1>
</header>
<main>
<div class='container'>
<div class='titleview'>
  <h1>Settings</h1>
  <br>
  <br>
  <div>
    <div class='item'>
      <label>Version</label>
      <% if (version.pinokio) { %>
        <div><%=version.pinokio%> (server: <%=version.pinokiod%>)</div>
      <% } else { %>
        <div>(server: <%=version.pinokiod%>)</div>
      <% } %>
    </div>
  </div>
  <form>
    <% config.forEach((c) => { %>
      <div class='item'>
        <label><%=c.key%></label>
        <% if (c.options) { %>
          <select name="<%=c.key%>">
            <% c.options.forEach((o) => { %>
              <% if (o === c.val) { %>
                <option value="<%=o%>" selected><%=o%></option> 
              <% } else { %>
                <option value="<%=o%>"><%=o%></option> 
              <% } %>
            <% }) %>
          </select>
        <% } else { %>
          <% if (c.val) { %>
            <input class='homepath' name="<%=c.key%>" type='text' value="<%=c.val%>" placeholder="<%=c.placeholder ? c.placeholder : ''%>">
          <% } else { %>
            <input class='homepath' name="<%=c.key%>" type='text' placeholder="<%=c.placeholder ? c.placeholder : ''%>">
          <% } %>
        <% } %>
      </div>
    <% }) %>
    <br>
    <button id='save' class='btn disabled'>Save</button>
  </form>
  <div class='loading hidden'>
    <i class="fa-solid fa-circle-notch fa-spin"></i> Stand by. Do not close this window..
  </div>
</div>
</div>
</main>
<script>
document.addEventListener("DOMContentLoaded", async () => {
  Reporter()
  const n = new N()
  document.querySelector("form").addEventListener("submit", async (e) => {
    e.preventDefault()
    e.stopPropagation()
    let val = document.querySelector(`[name=home]`).value
    if (/.*\s+.*/.test(val)) {
      alert("Please use a home path that does NOT include a space")
      document.querySelector(".homepath").focus()
    } else {
      document.querySelector(".loading").classList.remove("hidden")
      document.querySelector("#save").classList.add("hidden")
      document.querySelector(".homepath").setAttribute("disabled", "disabled")
      let theme = document.querySelector(`[name=theme]`).value
      let r = await fetch("/config", {
        method: "post",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          home: (val && val.length > 0 ? val : null),
          theme 
        })
      }).then((res) => {
        return res.json()
      })
      if (r.success) {
        //alert("Successfully updated the pinokio home to " + val)
        fetch("/restart", {
          method: "post"
        }, () => {
        })
        setInterval(async () => {
          try {
            let res = await fetch("/check").then((res) => {
              return res.json()
            })
            if (res.success) {
              document.querySelector(".loading").classList.add("hidden")
              setTimeout(() => {
                location.href = "/"
              }, 1000)
            }
          } catch (e) {
            console.log(e)
          }
        }, 1000)
      } else if (r.error) {
        alert(r.error)
        location.href = location.href
      }
    }
  })
})
</script>
</body>
</html>
